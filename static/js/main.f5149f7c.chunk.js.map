{"version":3,"sources":["components/Recipes.js","components/Ingredients.js","components/PlaceHolder.js","components/Home.js","serviceWorker.js","index.js"],"names":["Container","styled","div","_templateObject","ImageContainer","_templateObject2","Image","img","_templateObject3","Title","h1","_templateObject4","Publisher","h3","_templateObject5","Recipes","props","react_default","a","createElement","Fragment","recipes","map","item","key","recipe_id","onClick","fetchIngredients","src","image_url","height","width","alt","title","publisher","Main","Ingredients_templateObject","Ingredients_templateObject2","Ingredients_templateObject3","Wrapper","Ingredients_templateObject4","Ingredients_templateObject5","_templateObject6","List","ul","_templateObject7","Item","li","_templateObject8","Link","_templateObject9","Header","_templateObject10","Ingredients","Ingredients_Container","Ingredients_Image","details","Ingredients_Title","Ingredients_Publisher","href","source_url","target","rel","ingredients","PlaceHolder_templateObject","PlaceHolder","PlaceHolder_Main","Background","Home_templateObject","Home_templateObject2","Navbar","Home_templateObject3","Form","form","Home_templateObject4","Input","input","Home_templateObject5","Button","button","Home_templateObject6","Logo","Home_templateObject7","Home_templateObject8","Content","Home_templateObject9","Results","Home_templateObject10","NoResults","_templateObject11","Home","state","isLoading","noResults","handleSearch","e","preventDefault","_this","fetchRecipes","_callee","results","regenerator_default","wrap","_context","prev","next","setState","axios","get","concat","sent","data","error","alert","length","stop","_callee2","id","_context2","recipe","this","_this2","Home_Main","onSubmit","placeholder","value","onChange","Home_Wrapper","react_loader_spinner_default","type","color","components_Recipes","components_Ingredients","components_PlaceHolder","Component","Boolean","window","location","hostname","match","ReactDOM","render","Home_Home","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5149f7c.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    padding: 10px;\r\n\r\n    &:hover {\r\n        background-color: #F9F5F3;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst Image = styled.img`\r\n    border-radius: 50%;\r\n`\r\n\r\nconst Title = styled.h1`\r\n    font-family: 'Roboto Condensed', sans-serif;\r\n    margin: 0;\r\n    color: #F59783;\r\n    padding: 0 10px;\r\n`\r\n\r\nconst Publisher = styled.h3`\r\n    font-family: 'Roboto Condensed', sans-serif;\r\n    margin: 0;\r\n    color: #c7c7c7;\r\n    padding: 5px 10px;\r\n`\r\n\r\nconst Recipes = props => {\r\n\r\n    return (\r\n        <>\r\n            {props.recipes.map(item => (\r\n                <Container key={item.recipe_id} onClick={() => props.fetchIngredients(item.recipe_id)}>\r\n                    <ImageContainer><Image src={item.image_url} height='100px' width='100px' alt='pic' /></ImageContainer>\r\n                    <section>\r\n                        <Title>{item.title}</Title>\r\n                        <Publisher>{item.publisher}</Publisher>\r\n                    </section>\r\n                </Container>\r\n            ))}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Recipes\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Main = styled.div`\r\n    width: 60%;\r\n    background-color: #F9F5F3;\r\n    margin-top: 5px;\r\n    padding: 30px;\r\n    font-family: 'Roboto Condensed', sans-serif;\r\n    color: grey;\r\n    overflow-y: auto;\r\n`\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst Image = styled.img`\r\n    width: 300px;\r\n    height: 200px;\r\n    border-radius: 10px;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    width: 50%;\r\n    padding: 0 20px;\r\n`\r\n\r\nconst Title = styled.h1`\r\n    margin: 0;\r\n    padding-bottom: 5px;\r\n    color: #F69A83;\r\n`\r\n\r\nconst Publisher = styled.h3`\r\n    margin: 0;\r\n    padding-bottom: 30px;\r\n`\r\n\r\nconst List = styled.ul`\r\n    margin: 0;\r\n`\r\n\r\nconst Item = styled.li`\r\n    padding-top: 15px;\r\n    font-size: 25px;\r\n`\r\n\r\nconst Link = styled.a`\r\n    font-family: 'Roboto Condensed', sans-serif;\r\n    font-size: 20px;\r\n    text-decoration: none;\r\n    background-color: #076B00;\r\n    border-radius: 10px;\r\n    color: white;\r\n    padding: 15px;\r\n    transition: .5s\r\n\r\n    &:hover {\r\n        background-color: white;\r\n        color: #076B00;\r\n        border: 1px solid #076B00;\r\n    }\r\n`\r\n\r\nconst Header = styled.h1`\r\n    margin: 0;\r\n    margin-top: 15px;\r\n    color: #FBD789;\r\n`\r\n\r\nconst Ingredients = props => {\r\n\r\n    return(\r\n        <Main>\r\n            <Container>\r\n                <Image src={props.details.image_url} alt='pic' />\r\n                <Wrapper>\r\n                    <Title>{props.details.title}</Title>\r\n                    <Publisher>By {props.details.publisher}</Publisher>\r\n                    <Link href={props.details.source_url} target=\"_blank\" rel=\"noopener noreferrer\">Link to instructions</Link>\r\n                </Wrapper>\r\n            </Container>\r\n            <Header>Ingredient List</Header>\r\n            <List>\r\n                {props.details.ingredients.map(item => (\r\n                    <Item key={item}>\r\n                        {item}\r\n                    </Item>\r\n                ))}\r\n            </List>\r\n        </Main>\r\n    )\r\n\r\n}\r\n\r\nexport default Ingredients","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Main = styled.div`\r\n    width: 60%;\r\n    background-color: #F9F5F3;\r\n    margin-top: 5px;\r\n    padding: 30px;\r\n`\r\n\r\nconst PlaceHolder = () => {\r\n\r\n    return <Main />\r\n\r\n}\r\n\r\nexport default PlaceHolder","import React, { Component } from 'react'\r\nimport Recipes from './Recipes'\r\nimport Ingredients from './Ingredients'\r\nimport Loader from 'react-loader-spinner'\r\nimport PlaceHolder from './PlaceHolder'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\n\r\nconst Background = styled.div`\r\n    height: 100vh;\r\n    min-width: 930px;\r\n    background-image: linear-gradient(to bottom right, #F59683, #FBD989);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst Main = styled.div`\r\n    width: 1200px;\r\n    min-width: 930px;\r\n    background-color: white;\r\n    height: 90vh;\r\n    border-radius: 10px;\r\n`\r\n\r\nconst Navbar = styled.div`\r\n    height: 95px;\r\n    background-color: #F9F5F3;\r\n    border-radius: 10px 10px 0 0;\r\n    position: relative;\r\n`\r\n\r\nconst Form = styled.form`\r\n    text-align: center;\r\n    height: 95px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst Input = styled.input`\r\n    width: 300px;\r\n    padding: 12px 20px;\r\n    margin: 8px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n`\r\n\r\nconst Button = styled.button`\r\n    font-family: 'Roboto Condensed', sans-serif;\r\n    color: white;\r\n    font-size: 16px;\r\n    transform: translate(-40px);\r\n    border: none;\r\n    background-image: linear-gradient(to bottom right, #FBD989, #F59683);\r\n    width: 100px;\r\n    padding: 12px;\r\n    border-radius: 20px;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nconst Logo = styled.div`\r\n    font-family: 'Pacifico', cursive;\r\n    color: #574945;\r\n    font-size: 30px;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 95px;\r\n    padding-left: 50px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    position: absolute;\r\n    height: 95px;\r\n    top: 0;\r\n    right: 0;\r\n    padding-right: 50px\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    height: calc(100% - 95px);\r\n`\r\n\r\nconst Results = styled.div`\r\n    width: 40%;\r\n    margin-top: 5px;\r\n    overflow-y: auto;\r\n`\r\n\r\nconst NoResults = styled.h1`\r\n    font-family: 'Roboto Condensed', sans-serif;\r\n    color: #F59683;\r\n    padding-left: 30px;\r\n`\r\n\r\nexport default class Home extends Component {\r\n\r\n    state = {\r\n        input: '',\r\n        details: null,\r\n        recipes: [],\r\n        isLoading: false,\r\n        noResults: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchRecipes()\r\n    }\r\n\r\n    handleSearch = e => {\r\n        e.preventDefault()\r\n        this.fetchRecipes()\r\n    }\r\n\r\n    fetchRecipes = async () => {\r\n        this.setState({\r\n            isLoading: true,\r\n            details: null\r\n        })\r\n        let results = await axios.get(`https://www.food2fork.com/api/search?key=7a9780f5e720cc26d546e67f9d40aaea&q=${this.state.input}`)\r\n        if (results.data.error === 'limit') {\r\n            alert('Sorry! API usage limit exceeded.')\r\n            this.setState({isLoading: false})\r\n        }\r\n        else if (results.data.recipes.length === 0) {\r\n            this.setState({\r\n                noResults: true,\r\n                recipes: [],\r\n                isLoading: false\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                noResults: false,\r\n                recipes: results.data.recipes,\r\n                isLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    fetchIngredients = async id => {\r\n        this.setState({isLoading: true})\r\n        let results = await axios.get(`https://www.food2fork.com/api/get?key=7a9780f5e720cc26d546e67f9d40aaea&rId=${id}`)\r\n        this.setState({\r\n            details: results.data.recipe,\r\n            isLoading: false,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Background>\r\n                <Main>\r\n                    <Navbar>\r\n                        <Form onSubmit={this.handleSearch}>\r\n                            <Input\r\n                                placeholder='Search over 1,000,000 recipes..'\r\n                                value={this.state.input}\r\n                                onChange={e => this.setState({input: e.target.value})}\r\n                                onClick={() => this.setState({input: ''})}\r\n                            />\r\n                            <Button>Search</Button>\r\n                        </Form>\r\n                        <Logo>Foodie Land</Logo>\r\n                        {this.state.isLoading ? (\r\n                            <Wrapper>\r\n                                <Loader type=\"ThreeDots\" color=\"#F69A83\" height={80} width={80} />\r\n                            </Wrapper>\r\n                        ) : null}\r\n                    </Navbar>\r\n                    <Content>\r\n                        <Results>\r\n                            <Recipes recipes={this.state.recipes} fetchIngredients={this.fetchIngredients} />\r\n                            {this.state.noResults ? <NoResults>No Results..</NoResults> : null}\r\n                        </Results>\r\n                            {this.state.details ? <Ingredients details={this.state.details} /> : <PlaceHolder />}\r\n                    </Content>\r\n                </Main>\r\n            </Background>\r\n        )\r\n    }\r\n\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Home from './components/Home'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<Home />, document.getElementById('root'))\n\n\nserviceWorker.unregister()\n"],"sourceRoot":""}